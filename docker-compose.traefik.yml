version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.leresolver.acme.email=${TRAEFIK_EMAIL}
      - --certificatesresolvers.leresolver.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.leresolver.acme.tlschallenge=true
    ports:
      - "${TRAEFIK_WEB_PORT:-80}:80"
      - "${TRAEFIK_WEB_SECURE_PORT:-443}:443"
      - "${TRAEFIK_ADMIN_PORT:-8080}:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${LETSENCRYPT_DATA:-./letsencrypt}:/letsencrypt
    networks:
      - traefik
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=leresolver"

  web:
    image: nginx:alpine
    container_name: example-web
    hostname: example-web
    expose:
      - "${CONTAINER_PORT:-80}"
    networks:
      - traefik
      - app_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`${TRAEFIK_DOMAIN}`, `www.${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.web.entrypoints=websecure"
      - "traefik.http.routers.web.tls.certresolver=leresolver"
      - "traefik.http.services.web.loadbalancer.server.port=${CONTAINER_PORT:-80}"
    restart: unless-stopped

  test-client:
    image: alpine:latest
    container_name: test-client
    command: tail -f /dev/null
    networks:
      - app_net
    depends_on:
      - web
    restart: unless-stopped

networks:
  traefik:
    external: true
  app_net:
    driver: bridge
    name: my_custom_network
